from telegram import Update
from telegram.ext import ContextTypes
from util import (send_text, load_prompt, send_image, send_text_buttons)
from gpt import ChatGptService
from credentials import ChatGPT_TOKEN
import logging
from item_buttons import get_keyboard, PERSON_BUTTONS
from menu_handler import start
from messages_random import interpret_random_input, show_funny_response
chat_gpt = ChatGptService(ChatGPT_TOKEN)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /talk –¥–ª—è –¥—ñ–∞–ª–æ–≥—É –∑ –≤—ñ–¥–æ–º–∏–º–∏ –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—è–º–∏
async def talk_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –û—á–∏—â–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö —Å—Ç–∞–Ω—ñ–≤ —Ä–æ–∑–º–æ–≤–∏
        context.user_data.clear()

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        await send_image(update, context, 'talk')

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ—Ç—É—Ä—É
        keyboard = get_keyboard(PERSON_BUTTONS)

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–±–æ—Ä–æ–º –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
        await send_text_buttons(update, context, "üë§ –í–∏–±–µ—Ä—ñ—Ç—å –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å, –∑ —è–∫–æ—é –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è:", PERSON_BUTTONS)
    except Exception as e:
       logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É GPT-–¥—ñ–∞–ª–æ–≥—É: {e}")
       # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
       await send_text(update, context, "–ù–∞–∂–∞–ª—å –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–±–æ—Ä—É –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    message_text = update.message.text

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Ä–æ–∑–º–æ–≤–∏
    conversation_state = context.user_data.get('conversation_state')

    # –Ø–∫—â–æ —Å—Ç–∞–Ω —Ä–æ–∑–º–æ–≤–∏ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ (–≤–∏–ø–∞–¥–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)
    if not conversation_state:
        # –°–ø—Ä–æ–±—É—î–º–æ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç—É–≤–∞—Ç–∏ –Ω–∞–º—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        intent_recognized = await interpret_random_input(update, context, message_text)

        # –Ø–∫—â–æ –Ω–∞–º—ñ—Ä –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–æ, –ø–æ–∫–∞–∑—É—î–º–æ –∫—É–º–µ–¥–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        if not intent_recognized:
            await show_funny_response(update, context)

        return

    # –û–±—Ä–æ–±–∫–∞ –ø–∏—Ç–∞–Ω–Ω—è –¥–æ ChatGPT
    if conversation_state == 'gpt':
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        waiting_message = await send_text(update, context, "üîç –û–±—Ä–æ–±–ª—è—é –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è...")

        try:
            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –¥–æ ChatGPT
            response = await chat_gpt.add_message(message_text)

            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=waiting_message.message_id)

            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            await send_text(update, context, f"–í—ñ–¥–ø–æ–≤—ñ–¥—å ChatGPT:*\n\n{response}")

        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ ChatGPT: {e}")
            await send_text(update, context, "–ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=waiting_message.message_id)

    elif conversation_state == 'talk':
        # –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –¥—ñ–∞–ª–æ–≥—É –∑ –æ–±—Ä–∞–Ω–æ—é –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—é
        # –û—Ç—Ä–∏–º—É—î–º–æ –æ–±—Ä–∞–Ω—É –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å
        personality = context.user_data.get('selected_personality')

        if not personality:
            await send_text(update, context, "–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä—ñ—Ç—å –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å –¥–ª—è —Ä–æ–∑–º–æ–≤–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /talk")
            return

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        waiting_message = await send_text(update, context, "–û–±—Ä–æ–±–ª—è—é –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")

        try:
            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –¥–æ ChatGPT –∑ –ø—Ä–æ–º–ø—Ç–æ–º –æ–±—Ä–∞–Ω–æ—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
            response = await chat_gpt.add_message(message_text)

            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=waiting_message.message_id)

            # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏"
            buttons = {'start': '–ó–∞–∫—ñ–Ω—á–∏—Ç–∏'}

            # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ –∫–Ω–æ–ø–∫–æ—é
            personality_name = personality.replace('talk_', '').capitalize()
            await send_text_buttons(update, context, f"üë§ *{personality_name}:*\n\n{response}", buttons)

        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ ChatGPT: {e}")
            await send_text(update, context, "–ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –ø—ñ–∑–Ω—ñ—à–µ.")
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤ —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
            await context.bot.delete_message(chat_id=update.effective_chat.id, message_id=waiting_message.message_id)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–ª–±–µ–∫—ñ–≤ –¥–ª—è –¥—ñ–∞–ª–æ–≥—É –∑ –≤—ñ–¥–æ–º–∏–º–∏ –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—è–º–∏
async def talk_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –≤—ñ–¥–ø–æ–≤—ñ–¥–æ—î–º–æ –Ω–∞ callback

    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ –∫–æ–ª–±–µ–∫—É
    data = query.data

    # –Ø–∫—â–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏"
    if data == 'start':
        context.user_data.pop('conversation_state', None)
        context.user_data.pop('selected_personality', None)
        await start(update, context)
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ –≤–∏–±—ñ—Ä –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
    if data.startswith('talk_'):
        # –æ—á–∏—â—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø–µ—Ä–µ–¥ –≤–∏–±–æ—Ä–æ–º –Ω–æ–≤–æ—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
        context.user_data.clear()

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–±—Ä–∞–Ω—É –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å
        context.user_data['selected_personality'] = data
        context.user_data['conversation_state'] = 'talk'
        try:
            # –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø—Ä–æ–º—Ç –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
            prompt = load_prompt(data)
            chat_gpt.set_prompt(prompt) # –¶–µ –ø–æ–≤–Ω—ñ—Å—Ç—é —Å–∫–∏–¥–∞—î —ñ—Å—Ç–æ—Ä—ñ—é –ø–æ–≤—ñ–¥–æ–º–º–µ–Ω—å —É —Å–µ—Ä–≤—ñ—Å—ñ hatGPT
        except FileNotFoundError:
            await send_text(update, context, " –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª –¥–ª—è —Ü—ñ—î—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ.")
            logger.error(f"–ü—Ä–æ–º—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è {data}")
            return

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–∑–º–æ–≤–∏ –∑ –≤–∏–±—Ä–∞–Ω–æ—é –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—é
        personality_name = data.replace('talk_', '').capitalize()

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–æ—ó –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ
        await send_image(update, context, data)

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é —Ç–∞ –∫–Ω–æ–ø–∫–æ—é "–ó–∞–∫—ñ–Ω—á–∏—Ç–∏"
        buttons = {'start': '–ó–∞–∫—ñ–Ω—á–∏—Ç–∏ üèÅ'}
        await send_text_buttons(update, context,
                                f"üë§ –í–∏ –ø–æ—á–∞–ª–∏ —Ä–æ–∑–º–æ–≤—É –∑ *{personality_name}*. –ù–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.",
                                buttons)

        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {update.effective_user.first_name} —Ä–æ–∑–ø–æ—á–∞–≤ —Ä–æ–∑–º–æ–≤—É –∑ {personality_name}")








